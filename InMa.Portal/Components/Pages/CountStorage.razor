@page "/storage/count"

<PageTitle>Storage Count</PageTitle>

<h1>Amazing</h1>
@if (!StorageId.HasValue)
{
    <h3>Choose storage unit</h3>

    <form method="post" @onsubmit="Search" @formname="storagecountmodel-plain-form">
        <AntiforgeryToken/>
        <InputText @bind-Value="Model!.SearchStorageName"/>
        <button type="submit">Search</button>
        <a href="storage/add">
            <button>New</button>
        </a>
    </form>

    <table class='table'>
        <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th></th>
        </tr>
        </thead>
        <tbody>

        @if ((SearchStorageUnits?.Length ?? 0) <= 0)
        {
            <tr>
                <td colspan="*">Loading...</td>
            </tr>
        }
        else
        {
            @foreach (var storageUnit in SearchStorageUnits!)
            {
                <tr>
                    <td>@storageUnit.StorageId.ToString()</td>
                    <td>@storageUnit.StorageName</td>
                    <td>
                        <a href="storage/count?storageId=@(storageUnit.StorageId.ToString())">
                            <button >
                                Select
                            </button>
                        </a>
                    </td>
                </tr>
            }
        }

        </tbody>
    </table>
}
else
{
    <h3>
        @Model?.SelectedStorage?.StorageName    
    </h3>
}



@code {
    [SupplyParameterFromForm]
    public CountStorageModel? Model { get; set; }
    
    [SupplyParameterFromQuery(Name = "storageId")]
    public Guid? StorageId { get; set; }

    public StorageUnitModel[] SearchStorageUnits { get; set; } = Array.Empty<StorageUnitModel>();

    protected override void OnInitialized()
    {
        Model ??= new();

        if (StorageId.HasValue)
            Model.SelectedStorage = new()
            {
                StorageId = StorageId.Value,
                StorageName = StorageId.Value.ToString()
            };

    }

    private void Search()
    {
        if (Model!.SearchStorageName.Length < 2)
            return;
        
        SearchStorageUnits = new[]
        {
            new StorageUnitModel()
            {
                StorageId = Guid.NewGuid(),
                StorageName = Model!.SearchStorageName
            }
        };
    }

    public class CountStorageModel
    {
        public string SearchStorageName { get; set; } = "";
        
        public StorageUnitModel? SelectedStorage { get; set; }
    }

    public class StorageUnitModel
    {
        public Guid StorageId { get; set; }
        public string StorageName { get; set; } = null!;
    }
}
